intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.

lib{iw4x-steam}: {hxx ixx txx cxx}{** -version} \
                 {hxx            }{    version} \
                 $impl_libs $intf_libs

hxx{version}: in{version} $src_root/manifest

# Steam SDK unpackaged dependency
#
steam_sdk_root = $src_root/../upstream/steamworks_sdk

# Build options.
#
cxx.poptions =+ "-I$out_root" "-I$src_root" \
                "-I$steam_sdk_root/include"

obja{*}: cxx.poptions += -DLIBIW4X_STEAM_STATIC_BUILD
objs{*}: cxx.poptions += -DLIBIW4X_STEAM_SHARED_BUILD

if ($cxx.id == 'msvc')
{
  lib{iw4x}: cxx.loptions += "/LIBPATH:$steam_sdk_root/lib"

  lib{iw4x}: cxx.libs += sdkencryptedappticket64.lib
  lib{iw4x}: cxx.libs += steam_api64.lib

  lib{iw4x}: cxx.export.libs += sdkencryptedappticket64.lib
  lib{iw4x}: cxx.export.libs += steam_api64.lib
}

if ($cxx.class == 'gcc' && $cxx.target.system == 'mingw32')
{
  lib{iw4x}: cxx.loptions += "-L$steam_sdk_root/lib"

  lib{iw4x}: cxx.libs += -lsdkencryptedappticket64
  lib{iw4x}: cxx.libs += -lsteam_api64

  lib{iw4x}: cxx.export.libs += -lsdkencryptedappticket64
  lib{iw4x}: cxx.export.libs += -lsteam_api64
}

# Export options.
#
lib{iw4x-steam}:
{
  cxx.export.poptions = "-I$out_root" "-I$src_root" \
                        "-I$steam_sdk_root/include"

  cxx.export.libs = $intf_libs
}

liba{iw4x-steam}: cxx.export.poptions += -DLIBIW4X_STEAM_STATIC
libs{iw4x-steam}: cxx.export.poptions += -DLIBIW4X_STEAM_SHARED

# Install into the libiw4x/steam/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#
{hxx ixx txx}{*}:
{
  install         = include/libiw4x/steam/
  install.subdirs = true
}
